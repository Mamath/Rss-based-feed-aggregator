#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34003
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerRss.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="rssdb")]
	public partial class ServerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertItemRead(ItemRead instance);
    partial void UpdateItemRead(ItemRead instance);
    partial void DeleteItemRead(ItemRead instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertChannelXUser(ChannelXUser instance);
    partial void UpdateChannelXUser(ChannelXUser instance);
    partial void DeleteChannelXUser(ChannelXUser instance);
    partial void InsertChannel(Channel instance);
    partial void UpdateChannel(Channel instance);
    partial void DeleteChannel(Channel instance);
    #endregion
		
		public ServerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["rssdbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Session> Session
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<ItemRead> ItemRead
		{
			get
			{
				return this.GetTable<ItemRead>();
			}
		}
		
		public System.Data.Linq.Table<Item> Item
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<ChannelXUser> ChannelXUser
		{
			get
			{
				return this.GetTable<ChannelXUser>();
			}
		}
		
		public System.Data.Linq.Table<Channel> Channel
		{
			get
			{
				return this.GetTable<Channel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private bool _superuser;
		
		private EntitySet<Session> _Session;
		
		private EntitySet<ItemRead> _ItemRead;
		
		private EntitySet<ChannelXUser> _ChannelXUser;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsuperuserChanging(bool value);
    partial void OnsuperuserChanged();
    #endregion
		
		public User()
		{
			this._Session = new EntitySet<Session>(new Action<Session>(this.attach_Session), new Action<Session>(this.detach_Session));
			this._ItemRead = new EntitySet<ItemRead>(new Action<ItemRead>(this.attach_ItemRead), new Action<ItemRead>(this.detach_ItemRead));
			this._ChannelXUser = new EntitySet<ChannelXUser>(new Action<ChannelXUser>(this.attach_ChannelXUser), new Action<ChannelXUser>(this.detach_ChannelXUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superuser", DbType="Bit NOT NULL")]
		public bool superuser
		{
			get
			{
				return this._superuser;
			}
			set
			{
				if ((this._superuser != value))
				{
					this.OnsuperuserChanging(value);
					this.SendPropertyChanging();
					this._superuser = value;
					this.SendPropertyChanged("superuser");
					this.OnsuperuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Session", Storage="_Session", ThisKey="id", OtherKey="id_user")]
		public EntitySet<Session> Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				this._Session.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ItemRead", Storage="_ItemRead", ThisKey="id", OtherKey="id_user")]
		public EntitySet<ItemRead> ItemRead
		{
			get
			{
				return this._ItemRead;
			}
			set
			{
				this._ItemRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChannelXUser", Storage="_ChannelXUser", ThisKey="id", OtherKey="id_user")]
		public EntitySet<ChannelXUser> ChannelXUser
		{
			get
			{
				return this._ChannelXUser;
			}
			set
			{
				this._ChannelXUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Session(Session entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Session(Session entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ItemRead(ItemRead entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ItemRead(ItemRead entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ChannelXUser(ChannelXUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChannelXUser(ChannelXUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _session_key;
		
		private int _id_user;
		
		private System.DateTime _expire;
		
		private EntityRef<User> _User;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsession_keyChanging(string value);
    partial void Onsession_keyChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void OnexpireChanging(System.DateTime value);
    partial void OnexpireChanged();
    #endregion
		
		public Session()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_key", DbType="VarChar(38) NOT NULL", CanBeNull=false)]
		public string session_key
		{
			get
			{
				return this._session_key;
			}
			set
			{
				if ((this._session_key != value))
				{
					this.Onsession_keyChanging(value);
					this.SendPropertyChanging();
					this._session_key = value;
					this.SendPropertyChanged("session_key");
					this.Onsession_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expire", DbType="DateTime NOT NULL")]
		public System.DateTime expire
		{
			get
			{
				return this._expire;
			}
			set
			{
				if ((this._expire != value))
				{
					this.OnexpireChanging(value);
					this.SendPropertyChanging();
					this._expire = value;
					this.SendPropertyChanged("expire");
					this.OnexpireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Session", Storage="_User", ThisKey="id_user", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Session.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Session.Add(this);
						this._id_user = value.id;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemRead")]
	public partial class ItemRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_user;
		
		private int _id_item;
		
		private EntityRef<User> _User;
		
		private EntityRef<Item> _Item;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onid_itemChanging(int value);
    partial void Onid_itemChanged();
    #endregion
		
		public ItemRead()
		{
			this._User = default(EntityRef<User>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_item", DbType="Int NOT NULL")]
		public int id_item
		{
			get
			{
				return this._id_item;
			}
			set
			{
				if ((this._id_item != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_itemChanging(value);
					this.SendPropertyChanging();
					this._id_item = value;
					this.SendPropertyChanged("id_item");
					this.Onid_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ItemRead", Storage="_User", ThisKey="id_user", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ItemRead.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ItemRead.Add(this);
						this._id_user = value.id;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemRead", Storage="_Item", ThisKey="id_item", OtherKey="id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemRead.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemRead.Add(this);
						this._id_item = value.id;
					}
					else
					{
						this._id_item = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_channel;
		
		private string _title;
		
		private string _link;
		
		private System.Nullable<System.DateTimeOffset> _pubDate;
		
		private string _description;
		
		private string _guid;
		
		private string _author;
		
		private string _category;
		
		private string _comments;
		
		private EntitySet<ItemRead> _ItemRead;
		
		private EntityRef<Channel> _Channel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_channelChanging(int value);
    partial void Onid_channelChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnpubDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnpubDateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public Item()
		{
			this._ItemRead = new EntitySet<ItemRead>(new Action<ItemRead>(this.attach_ItemRead), new Action<ItemRead>(this.detach_ItemRead));
			this._Channel = default(EntityRef<Channel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_channel", DbType="Int NOT NULL")]
		public int id_channel
		{
			get
			{
				return this._id_channel;
			}
			set
			{
				if ((this._id_channel != value))
				{
					if (this._Channel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_channelChanging(value);
					this.SendPropertyChanging();
					this._id_channel = value;
					this.SendPropertyChanged("id_channel");
					this.Onid_channelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> pubDate
		{
			get
			{
				return this._pubDate;
			}
			set
			{
				if ((this._pubDate != value))
				{
					this.OnpubDateChanging(value);
					this.SendPropertyChanging();
					this._pubDate = value;
					this.SendPropertyChanged("pubDate");
					this.OnpubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guid", DbType="VarChar(255)")]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(255)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(255)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(255)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemRead", Storage="_ItemRead", ThisKey="id", OtherKey="id_item")]
		public EntitySet<ItemRead> ItemRead
		{
			get
			{
				return this._ItemRead;
			}
			set
			{
				this._ItemRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_Item", Storage="_Channel", ThisKey="id_channel", OtherKey="id", IsForeignKey=true)]
		public Channel Channel
		{
			get
			{
				return this._Channel.Entity;
			}
			set
			{
				Channel previousValue = this._Channel.Entity;
				if (((previousValue != value) 
							|| (this._Channel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Channel.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Channel.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._id_channel = value.id;
					}
					else
					{
						this._id_channel = default(int);
					}
					this.SendPropertyChanged("Channel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemRead(ItemRead entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemRead(ItemRead entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChannelXUser")]
	public partial class ChannelXUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private int _id_channel;
		
		private int _id;
		
		private EntityRef<User> _User;
		
		private EntityRef<Channel> _Channel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onid_channelChanging(int value);
    partial void Onid_channelChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public ChannelXUser()
		{
			this._User = default(EntityRef<User>);
			this._Channel = default(EntityRef<Channel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_channel", DbType="Int NOT NULL")]
		public int id_channel
		{
			get
			{
				return this._id_channel;
			}
			set
			{
				if ((this._id_channel != value))
				{
					if (this._Channel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_channelChanging(value);
					this.SendPropertyChanging();
					this._id_channel = value;
					this.SendPropertyChanged("id_channel");
					this.Onid_channelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChannelXUser", Storage="_User", ThisKey="id_user", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChannelXUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChannelXUser.Add(this);
						this._id_user = value.id;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_ChannelXUser", Storage="_Channel", ThisKey="id_channel", OtherKey="id", IsForeignKey=true)]
		public Channel Channel
		{
			get
			{
				return this._Channel.Entity;
			}
			set
			{
				Channel previousValue = this._Channel.Entity;
				if (((previousValue != value) 
							|| (this._Channel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Channel.Entity = null;
						previousValue.ChannelXUser.Remove(this);
					}
					this._Channel.Entity = value;
					if ((value != null))
					{
						value.ChannelXUser.Add(this);
						this._id_channel = value.id;
					}
					else
					{
						this._id_channel = default(int);
					}
					this.SendPropertyChanged("Channel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Channel")]
	public partial class Channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _description;
		
		private string _link;
		
		private string _url;
		
		private System.Nullable<System.DateTime> _pubDate;
		
		private System.Nullable<System.DateTime> _lastBuildDate;
		
		private string _image;
		
		private string _enclosure;
		
		private EntitySet<Item> _Item;
		
		private EntitySet<ChannelXUser> _ChannelXUser;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnpubDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpubDateChanged();
    partial void OnlastBuildDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastBuildDateChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnenclosureChanging(string value);
    partial void OnenclosureChanged();
    #endregion
		
		public Channel()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			this._ChannelXUser = new EntitySet<ChannelXUser>(new Action<ChannelXUser>(this.attach_ChannelXUser), new Action<ChannelXUser>(this.detach_ChannelXUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubDate", DbType="Date")]
		public System.Nullable<System.DateTime> pubDate
		{
			get
			{
				return this._pubDate;
			}
			set
			{
				if ((this._pubDate != value))
				{
					this.OnpubDateChanging(value);
					this.SendPropertyChanging();
					this._pubDate = value;
					this.SendPropertyChanged("pubDate");
					this.OnpubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastBuildDate", DbType="Date")]
		public System.Nullable<System.DateTime> lastBuildDate
		{
			get
			{
				return this._lastBuildDate;
			}
			set
			{
				if ((this._lastBuildDate != value))
				{
					this.OnlastBuildDateChanging(value);
					this.SendPropertyChanging();
					this._lastBuildDate = value;
					this.SendPropertyChanged("lastBuildDate");
					this.OnlastBuildDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enclosure", DbType="VarChar(255)")]
		public string enclosure
		{
			get
			{
				return this._enclosure;
			}
			set
			{
				if ((this._enclosure != value))
				{
					this.OnenclosureChanging(value);
					this.SendPropertyChanging();
					this._enclosure = value;
					this.SendPropertyChanged("enclosure");
					this.OnenclosureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_Item", Storage="_Item", ThisKey="id", OtherKey="id_channel")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Channel_ChannelXUser", Storage="_ChannelXUser", ThisKey="id", OtherKey="id_channel")]
		public EntitySet<ChannelXUser> ChannelXUser
		{
			get
			{
				return this._ChannelXUser;
			}
			set
			{
				this._ChannelXUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Channel = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Channel = null;
		}
		
		private void attach_ChannelXUser(ChannelXUser entity)
		{
			this.SendPropertyChanging();
			entity.Channel = this;
		}
		
		private void detach_ChannelXUser(ChannelXUser entity)
		{
			this.SendPropertyChanging();
			entity.Channel = null;
		}
	}
}
#pragma warning restore 1591
