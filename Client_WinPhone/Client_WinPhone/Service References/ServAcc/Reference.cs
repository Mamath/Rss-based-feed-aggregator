//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18408
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Client_WinPhone.ServAcc {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resultat", Namespace="http://schemas.datacontract.org/2004/07/ServerRss.Tools")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6))]
    public partial class Resultat : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Client_WinPhone.ServAcc.Resultat.ErrorCode _errorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_WinPhone.ServAcc.Resultat.ErrorCode _error {
            get {
                return this._errorField;
            }
            set {
                if ((this._errorField.Equals(value) != true)) {
                    this._errorField = value;
                    this.RaisePropertyChanged("_error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Resultat.ErrorCode", Namespace="http://schemas.datacontract.org/2004/07/ServerRss.Tools")]
        public enum ErrorCode : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SUCCESS = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_NOT_FOUND = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_ALREADY_EXIST = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INFORMATION_REQUIRED = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NOT_LOGUED = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INTERNAL_ERROR = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NEED_PRIVILEGE = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ALREADY_LOGUED = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_CREATE_FEED = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_GET_FEED = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ITEM_NOT_FOUND = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PARAMETER_ERROR = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INVALID_PARAMETER = 12,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultatOfbooleanAccountDataGmrGjgq6", Namespace="http://schemas.datacontract.org/2004/07/ServerRss.Tools")]
    public partial class ResultatOfbooleanAccountDataGmrGjgq6 : Client_WinPhone.ServAcc.Resultat {
        
        private bool _val1Field;
        
        private Client_WinPhone.ServAcc.AccountData _val2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _val1 {
            get {
                return this._val1Field;
            }
            set {
                if ((this._val1Field.Equals(value) != true)) {
                    this._val1Field = value;
                    this.RaisePropertyChanged("_val1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_WinPhone.ServAcc.AccountData _val2 {
            get {
                return this._val2Field;
            }
            set {
                if ((object.ReferenceEquals(this._val2Field, value) != true)) {
                    this._val2Field = value;
                    this.RaisePropertyChanged("_val2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultatOfstringAccountDataGmrGjgq6", Namespace="http://schemas.datacontract.org/2004/07/ServerRss.Tools")]
    public partial class ResultatOfstringAccountDataGmrGjgq6 : Client_WinPhone.ServAcc.Resultat {
        
        private string _val1Field;
        
        private Client_WinPhone.ServAcc.AccountData _val2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _val1 {
            get {
                return this._val1Field;
            }
            set {
                if ((object.ReferenceEquals(this._val1Field, value) != true)) {
                    this._val1Field = value;
                    this.RaisePropertyChanged("_val1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client_WinPhone.ServAcc.AccountData _val2 {
            get {
                return this._val2Field;
            }
            set {
                if ((object.ReferenceEquals(this._val2Field, value) != true)) {
                    this._val2Field = value;
                    this.RaisePropertyChanged("_val2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountData", Namespace="http://schemas.datacontract.org/2004/07/ServerRss.Services")]
    public partial class AccountData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AdminField;
        
        private string EmailField;
        
        private int IdField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServAcc.Account")]
    public interface Account {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/Login", ReplyAction="http://tempuri.org/Account/LoginResponse")]
        System.IAsyncResult BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/Register", ReplyAction="http://tempuri.org/Account/RegisterResponse")]
        System.IAsyncResult BeginRegister(string email, string username, string password, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.Resultat EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/UpdateData", ReplyAction="http://tempuri.org/Account/UpdateDataResponse")]
        System.IAsyncResult BeginUpdateData(string session_key, Client_WinPhone.ServAcc.AccountData updateData, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.Resultat EndUpdateData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/DeleteAccount", ReplyAction="http://tempuri.org/Account/DeleteAccountResponse")]
        System.IAsyncResult BeginDeleteAccount(string session_key, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.Resultat EndDeleteAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/UpdatePassword", ReplyAction="http://tempuri.org/Account/UpdatePasswordResponse")]
        System.IAsyncResult BeginUpdatePassword(string session_key, string password, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.Resultat EndUpdatePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Account/IsConnected", ReplyAction="http://tempuri.org/Account/IsConnectedResponse")]
        System.IAsyncResult BeginIsConnected(string session_key, System.AsyncCallback callback, object asyncState);
        
        Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 EndIsConnected(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountChannel : Client_WinPhone.ServAcc.Account, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.Resultat Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.Resultat)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.Resultat Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.Resultat)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.Resultat Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.Resultat)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.Resultat Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.Resultat)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountClient : System.ServiceModel.ClientBase<Client_WinPhone.ServAcc.Account>, Client_WinPhone.ServAcc.Account {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDataDelegate;
        
        private EndOperationDelegate onEndUpdateDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAccountDelegate;
        
        private EndOperationDelegate onEndDeleteAccountDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePasswordDelegate;
        
        private EndOperationDelegate onEndUpdatePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsConnectedDelegate;
        
        private EndOperationDelegate onEndIsConnectedDelegate;
        
        private System.Threading.SendOrPostCallback onIsConnectedCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AccountClient() {
        }
        
        public AccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<UpdateDataCompletedEventArgs> UpdateDataCompleted;
        
        public event System.EventHandler<DeleteAccountCompletedEventArgs> DeleteAccountCompleted;
        
        public event System.EventHandler<UpdatePasswordCompletedEventArgs> UpdatePasswordCompleted;
        
        public event System.EventHandler<IsConnectedCompletedEventArgs> IsConnectedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(email, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 Client_WinPhone.ServAcc.Account.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginLogin(email, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string email, string password) {
            this.LoginAsync(email, password, null);
        }
        
        public void LoginAsync(string email, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        email,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginRegister(string email, string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(email, username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.Resultat Client_WinPhone.ServAcc.Account.EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginRegister(email, username, password, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.Resultat retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string email, string username, string password) {
            this.RegisterAsync(email, username, password, null);
        }
        
        public void RegisterAsync(string email, string username, string password, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        email,
                        username,
                        password}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginUpdateData(string session_key, Client_WinPhone.ServAcc.AccountData updateData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateData(session_key, updateData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.Resultat Client_WinPhone.ServAcc.Account.EndUpdateData(System.IAsyncResult result) {
            return base.Channel.EndUpdateData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string session_key = ((string)(inValues[0]));
            Client_WinPhone.ServAcc.AccountData updateData = ((Client_WinPhone.ServAcc.AccountData)(inValues[1]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginUpdateData(session_key, updateData, callback, asyncState);
        }
        
        private object[] OnEndUpdateData(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.Resultat retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndUpdateData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDataCompleted(object state) {
            if ((this.UpdateDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDataCompleted(this, new UpdateDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDataAsync(string session_key, Client_WinPhone.ServAcc.AccountData updateData) {
            this.UpdateDataAsync(session_key, updateData, null);
        }
        
        public void UpdateDataAsync(string session_key, Client_WinPhone.ServAcc.AccountData updateData, object userState) {
            if ((this.onBeginUpdateDataDelegate == null)) {
                this.onBeginUpdateDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateData);
            }
            if ((this.onEndUpdateDataDelegate == null)) {
                this.onEndUpdateDataDelegate = new EndOperationDelegate(this.OnEndUpdateData);
            }
            if ((this.onUpdateDataCompletedDelegate == null)) {
                this.onUpdateDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDataDelegate, new object[] {
                        session_key,
                        updateData}, this.onEndUpdateDataDelegate, this.onUpdateDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginDeleteAccount(string session_key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAccount(session_key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.Resultat Client_WinPhone.ServAcc.Account.EndDeleteAccount(System.IAsyncResult result) {
            return base.Channel.EndDeleteAccount(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string session_key = ((string)(inValues[0]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginDeleteAccount(session_key, callback, asyncState);
        }
        
        private object[] OnEndDeleteAccount(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.Resultat retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndDeleteAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAccountCompleted(object state) {
            if ((this.DeleteAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAccountAsync(string session_key) {
            this.DeleteAccountAsync(session_key, null);
        }
        
        public void DeleteAccountAsync(string session_key, object userState) {
            if ((this.onBeginDeleteAccountDelegate == null)) {
                this.onBeginDeleteAccountDelegate = new BeginOperationDelegate(this.OnBeginDeleteAccount);
            }
            if ((this.onEndDeleteAccountDelegate == null)) {
                this.onEndDeleteAccountDelegate = new EndOperationDelegate(this.OnEndDeleteAccount);
            }
            if ((this.onDeleteAccountCompletedDelegate == null)) {
                this.onDeleteAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAccountCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAccountDelegate, new object[] {
                        session_key}, this.onEndDeleteAccountDelegate, this.onDeleteAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginUpdatePassword(string session_key, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePassword(session_key, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.Resultat Client_WinPhone.ServAcc.Account.EndUpdatePassword(System.IAsyncResult result) {
            return base.Channel.EndUpdatePassword(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string session_key = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginUpdatePassword(session_key, password, callback, asyncState);
        }
        
        private object[] OnEndUpdatePassword(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.Resultat retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndUpdatePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePasswordCompleted(object state) {
            if ((this.UpdatePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePasswordAsync(string session_key, string password) {
            this.UpdatePasswordAsync(session_key, password, null);
        }
        
        public void UpdatePasswordAsync(string session_key, string password, object userState) {
            if ((this.onBeginUpdatePasswordDelegate == null)) {
                this.onBeginUpdatePasswordDelegate = new BeginOperationDelegate(this.OnBeginUpdatePassword);
            }
            if ((this.onEndUpdatePasswordDelegate == null)) {
                this.onEndUpdatePasswordDelegate = new EndOperationDelegate(this.OnEndUpdatePassword);
            }
            if ((this.onUpdatePasswordCompletedDelegate == null)) {
                this.onUpdatePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePasswordDelegate, new object[] {
                        session_key,
                        password}, this.onEndUpdatePasswordDelegate, this.onUpdatePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Client_WinPhone.ServAcc.Account.BeginIsConnected(string session_key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsConnected(session_key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 Client_WinPhone.ServAcc.Account.EndIsConnected(System.IAsyncResult result) {
            return base.Channel.EndIsConnected(result);
        }
        
        private System.IAsyncResult OnBeginIsConnected(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string session_key = ((string)(inValues[0]));
            return ((Client_WinPhone.ServAcc.Account)(this)).BeginIsConnected(session_key, callback, asyncState);
        }
        
        private object[] OnEndIsConnected(System.IAsyncResult result) {
            Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 retVal = ((Client_WinPhone.ServAcc.Account)(this)).EndIsConnected(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsConnectedCompleted(object state) {
            if ((this.IsConnectedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsConnectedCompleted(this, new IsConnectedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsConnectedAsync(string session_key) {
            this.IsConnectedAsync(session_key, null);
        }
        
        public void IsConnectedAsync(string session_key, object userState) {
            if ((this.onBeginIsConnectedDelegate == null)) {
                this.onBeginIsConnectedDelegate = new BeginOperationDelegate(this.OnBeginIsConnected);
            }
            if ((this.onEndIsConnectedDelegate == null)) {
                this.onEndIsConnectedDelegate = new EndOperationDelegate(this.OnEndIsConnected);
            }
            if ((this.onIsConnectedCompletedDelegate == null)) {
                this.onIsConnectedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsConnectedCompleted);
            }
            base.InvokeAsync(this.onBeginIsConnectedDelegate, new object[] {
                        session_key}, this.onEndIsConnectedDelegate, this.onIsConnectedCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Client_WinPhone.ServAcc.Account CreateChannel() {
            return new AccountClientChannel(this);
        }
        
        private class AccountClientChannel : ChannelBase<Client_WinPhone.ServAcc.Account>, Client_WinPhone.ServAcc.Account {
            
            public AccountClientChannel(System.ServiceModel.ClientBase<Client_WinPhone.ServAcc.Account> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6 _result = ((Client_WinPhone.ServAcc.ResultatOfstringAccountDataGmrGjgq6)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegister(string email, string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = email;
                _args[1] = username;
                _args[2] = password;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.Resultat EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.Resultat _result = ((Client_WinPhone.ServAcc.Resultat)(base.EndInvoke("Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateData(string session_key, Client_WinPhone.ServAcc.AccountData updateData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = session_key;
                _args[1] = updateData;
                System.IAsyncResult _result = base.BeginInvoke("UpdateData", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.Resultat EndUpdateData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.Resultat _result = ((Client_WinPhone.ServAcc.Resultat)(base.EndInvoke("UpdateData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAccount(string session_key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = session_key;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.Resultat EndDeleteAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.Resultat _result = ((Client_WinPhone.ServAcc.Resultat)(base.EndInvoke("DeleteAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePassword(string session_key, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = session_key;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePassword", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.Resultat EndUpdatePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.Resultat _result = ((Client_WinPhone.ServAcc.Resultat)(base.EndInvoke("UpdatePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsConnected(string session_key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = session_key;
                System.IAsyncResult _result = base.BeginInvoke("IsConnected", _args, callback, asyncState);
                return _result;
            }
            
            public Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 EndIsConnected(System.IAsyncResult result) {
                object[] _args = new object[0];
                Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6 _result = ((Client_WinPhone.ServAcc.ResultatOfbooleanAccountDataGmrGjgq6)(base.EndInvoke("IsConnected", _args, result)));
                return _result;
            }
        }
    }
}
